<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div>
        <ul class="ul-pagination"></ul>
    </div>
    <button onclick="left()"><<</button>
    <button onclick="right()">>></button>
    <script>
        let options= {
            newsToShow: '4',
            container: '.ul-pagination',
            maxPages: '5'
        }

let news = [
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
  {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
  {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
 {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
 {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
 {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
 {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    {title: 'some title', subtitle: 'subtitle', img: 'image'},
    
]
let items = []
let pages = Math.ceil(news.length / options.newsToShow);
let rightActive = true
let leftActive = false;
let current = 1;
let ul = document.querySelector(options.container)


console.log(pages)

let prevIndex = document.createElement('li')
prevIndex.innerHTML = '1'
let dots_left = document.createElement('li')
dots_left.innerHTML = '...'
let dots_right = document.createElement('li')
dots_right.innerHTML = '...'
let nextIndex = document.createElement('li')
nextIndex.innerHTML = pages

function setStart() {
	items = []
	//создаем начальный массив
for (let i = 1; i < pages; i++) {
	if (i <= options.maxPages) {
		var element = i
		items.push(element)
	}
} //end for
	let ul = document.querySelector(options.container)
	items.forEach(function(i, value) {
		var li = document.createElement('li')
		li.innerHTML = value + 1
		ul.append(li)
	})
//	ul.firstChild.classList.add('active')
	current = 1

}

var l = pages-options.maxPages + 1
function setEnd(){
	items = []
for (let i = l; i <= pages; i++) {
//	if (i <= pages) {
		var element = i
		items.push(element)
		
//	}
} //end for\
console.log(items)
let ul = document.querySelector(options.container)
items.forEach(function(i, value) {
		var li= document.createElement('li')
		li.innerHTML = i 
	//	ul.append(li)
	})
	console.log(ul)
//	ul.firstChild.classList.add('active')
	current = pages

}



setStart()
let myArray = Array.from(ul.childNodes)
ul.firstChild.classList.add('active')
ul.addEventListener('click', (e) => {
	if (e.target !== ul && !isNaN(e.target.innerHTML) && !e.target.classList.contains('.active')) {
	ul.querySelector('.active').classList.remove('active')
	e.target.classList.add('active')
	current = e.target.innerHTML
	let currentEl = ul.querySelector('.active')
	console.log(items)
console.log(current)
		if ( items[items.length-1] - current == 0 && items[items.length-1] < pages ){ // right nums 
			items.forEach(function(i, value) {
			items[value]++
			myArray[value].innerHTML = items[value]
		//	console.log(myArray[value])
		})//end foreach
		currentEl.classList.remove('active')
		e.target.previousElementSibling.classList.add('active') // if prev not null
		kek()
		} else if (items[0] - current == 0 &&  items[0] > 1){ // left nums
			items.forEach(function(i, value) {
			items[value]--
			myArray[value].innerHTML = items[value]
			console.log(myArray[value])
		})//end foreach
		currentEl.classList.remove('active')
		e.target.nextElementSibling.classList.add('active') // if prev not null
		console.log(items)
		kek()
		} else if (e.target.innerHTML == pages){
			items = []
   // push 5 раз от 15+1 
   
    var comp = pages - options.maxPages +1
    for (let i = comp; i <= pages; i++) { //???
    
        items.push(i)
    
	console.log(items)
} //end for
	ul.innerHTML = ''
	items.forEach(function(i, value) {
			var li = document.createElement('li')
			li.innerHTML = i 
			ul.append(li)
		}) 
		current = pages
		myArray = Array.from(ul.childNodes)
		kek()
		} else if (e.target.innerHTML == 1){ // click 1
			items = []
			var comp = 1
    		for (let i = comp; i <= options.maxPages; i++) { //???
				items.push(i)
    			console.warn(items)
			} //end for
			ul.innerHTML = ''
			items.forEach(function(i, value) {
				var li = document.createElement('li')
				li.innerHTML = i 
				ul.append(li)
			}) 
		current = 1
		myArray = Array.from(ul.childNodes)
		kek()
		}	
	}
})

function kek() {
	var leftside =  items[0] - 1 
var rightside = pages - items[items.length-1]
	console.log(' left side: ' +leftside + 'rightside: ' + rightside)
if ( leftside == 0 && rightside >= 2 ){
	prevIndex.remove()
	ul.append(dots_right)
	ul.append(nextIndex)
	ul.lastChild.classList.remove('active')
//	ul.firstChild.classList.add('active')
//	current = 1
	if (current == 1) {
		ul.firstChild.classList.add('active')
		ul.lastChild.classList.remove('active')
	
	} else {
		ul.firstChild.classList.remove('active')
	}
}
	else if (leftside == 1 && rightside >= 2) {

    ul.prepend(prevIndex)
	ul.firstChild.classList.remove('active')
	dots_left.remove()
    ul.append(dots_right)
    ul.append(nextIndex)
} else if ( leftside >= 2 && rightside >=2) {
    ul.insertBefore(dots_left, ul.firstElementChild.nextElementSibling);
	ul.append(dots_right)
	ul.append(nextIndex)
} else if ( leftside >=2  && rightside == 1) {
    dots_right.remove()
	ul.append(nextIndex)
	ul.lastChild.classList.remove('active')
	
} else if ( leftside >= 2 && rightside == 0){
    nextIndex.remove()
	ul.prepend(dots_left)
	ul.prepend(prevIndex)
	
	console.log(current)
	if (current == pages){
		ul.firstChild.classList.remove('active')
		ul.lastChild.classList.add('active')	
		console.log('leel')
	} else {
		ul.lastChild.classList.remove('active')
	}
}

}
if ( (pages - items[items.length-1]) > 2 ) {
	ul.append(dots_right)
	ul.append(nextIndex)
}

startPos = (options.startFrom - 1) * options.newsToShow
endPos = startPos + options.newsToShow

let NewsArray = news.slice(startPos, endPos)
console.log(NewsArray)
for (let value of NewsArray) {
	console.log(value['title'])
}
//let myArray = Array.from(ul.childNodes)


console.log(pages)


//console.log(nextIdnex)

function right() {

	var leftActive = true;
	let active = ul.querySelector('.active')
	
	if ((items[items.length - 1] - current) == 1 && (items[items.length - 1] !== pages)) { // 1 2 3 4 5, 5 - 4 = 1 кол-во элементов после active

		items.forEach(function(i, value) {
			items[value]++
			myArray[value].innerHTML = items[value]
		})
		current++
	} else {
		if (active.nextElementSibling !== null) {
			active.classList.remove('active')
			active.nextElementSibling.classList.add('active')
			
			current++
		}
	}
	
//setRightSide(items[0], items[items.length - 1], items)

kek()
} //right


function left() {
	let active = ul.querySelector('.active')
	console.warn ((items[1] - current) )
	if ((items[1] - current) == 0 && (items[0] !== 1)) { // 1 2 3 4 5, 5 - 4 = 1 кол-во элементов после active
		items.forEach(function(i, value) {
			console.log(items[value])
			items[value]--
			myArray[value].innerHTML = items[value]
		})
		current--
	} else {

		if ((active.previousElementSibling !== null) && !(isNaN(active.previousElementSibling.innerHTML))) {
			active.previousElementSibling.classList.add('active')
			active.classList.remove('active')
			current--
		}
	}
//	setLeftSide(items[0], items[items.length - 1], items)
	console.log(myArray)
	kek()
}//left


</script> 
    <style type="text/css">
      .active {
        font-weight: bold;
        font-size: 23px;
        text-decoration: underline;
      }
      ul {
        list-style: none

      }
      li {
        display: inline-block;
        padding: 15px;
        cursor: pointer;
        font-size: 20px;
      }
    </style>
</body>
</html>
